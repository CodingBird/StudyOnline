@using StudyOnline.Infrastructure
@using Model
@using StudyOnline.Models
@model IEnumerable<VideoInfo>
@{
    IEnumerable<VideoCategory> cats = ViewData["videoCats"] as IEnumerable<VideoCategory>;
}
        <table class="table table-hover table-striped">
            <tr>
                <th class="th_width1">视频名称</th>
                <th class="th_width2">视频类别</th>
                <th class="th_width2">播放次数</th>
                <th class="th_width2">上传时间</th>
            </tr>
            @{
                int catId =0;
                VideoCategory cat;
                string catName ="未分类";
                foreach (var video in Model)
                {
                   if(cats != null)
                   {
                       catId = Convert.ToInt32(video.CategoryId);
                       cat = cats.Where(c => c.Id == catId).FirstOrDefault();
                       catName = cat == null ? "" : cat.Name;
                   }
                    
                <tr>
                    <td>@Ajax.ActionLink(Html.ShortenText(video.Name, 33), "Detail", new { videoId = video.Id }, new AjaxOptions
                   {
                       InsertionMode = InsertionMode.Replace,
                       UpdateTargetId = "video_show_place",
                       HttpMethod = "GET",
                       OnSuccess = "bindEventAfterGetVideoDetail"
                   }, new { @class = "videoDetail", title = video.Name })</td>
                    <td>@Html.ActionLink(Html.ShortenText(catName, 5), "Genre", new { categoryName = catName, categoryId = catId },
                    new { title = catName})</td>
                    <td>@video.PlayCount.ToString()</td>
                    <td>@video.UploadTime.ToString("yyy-MM-dd")</td>
                </tr>
                }
            }
        </table>